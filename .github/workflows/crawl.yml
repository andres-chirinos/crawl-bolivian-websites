name: Crawl website

on:
  #schedule:
  #  - cron: "*/15 * * * *"
  workflow_dispatch:
    inputs:
      url:
        description: "URL to crawl"
        required: true
        default: ""

jobs:
  extract:
    name: Extract
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Read Config
        run: |
          python -c """
          import yaml, datetime
          import os

          # Config variables
          def flatten_config(prefix, config):
            for key, value in config.items():
              if isinstance(value, dict):
                flatten_config(f'{prefix}{key.upper()}_', value)
              else:
                print(f'{prefix}{key.upper()}={value}')

          with open('config.yml') as f:
            config = yaml.safe_load(f)

          flatten_config('', config)

          # Runtime variables
          timestamp = datetime.datetime.now().strftime('%Y%m%d%H%M%S')
          print(f'TIMESTAMP={timestamp}')
          # Generate a URL slug for artifact naming
          import re
          url = os.environ.get('URL', '')
          url_slug = re.sub(r'[^A-Za-z0-9_-]', '_', url.replace('https://', '').replace('http://', ''))
          print(f'URL_SLUG={url_slug}')
          """ >> $GITHUB_ENV
        env:
          URL: ${{ github.event.inputs.url }}

      - name: Run Crawler
        env:
          URL: ${{ github.event.inputs.url }}
          URL_SLUG: ${{ env.URL_SLUG }}
        run: |
          docker run --rm -v ${{ github.workspace }}/data:/crawls/ webrecorder/browsertrix-crawler crawl \
          --url "$URL" \
          --generateWACZ \
          --blockads --adBlockMessage "AD BLOCKED" \
          --blockMessage "URL BLOCKED" \
          --allowHashUrls \
          --useSitemap \
          --waitUntil networkidle0 \
          --lang es \
          --retries 3 \
          --postLoadDelay 1 \
          --collection "$URL_SLUG"-"$TIMESTAMP" \
          --workers 4 \
          --clickSelector "a,button"
        
        #--scopeType "domain"

      - name: Upload raw data
        id: upload-raw-data-step
        uses: actions/upload-artifact@v4
        with:
          name: raw-data-${{ env.URL_SLUG }}
          path: ./data/*
          retention-days: ${{ env.GITHUB_ACTIONS_ARTIFACT_DATA_RETENTION_DAYS }}

      - name: Zip raw data
        run: |
          zip -r raw-data-${{ env.TIMESTAMP }}-${{ env.URL_SLUG }}.zip ./data/

      - name: Upload to Google Drive
        uses: willo32/google-drive-upload-action@v1
        with:
          target: raw-data-${{ env.TIMESTAMP }}-${{ env.URL_SLUG }}.zip
          credentials: ${{ secrets.GDRIVE_SERVICE_ACCOUNT }}
          parent_folder_id: ${{ env.DRIVE_FOLDER_ID }}
          name: ${{ env.URL_SLUG }}-${{ env.TIMESTAMP }}.zip
          child_folder: ${{ env.URL_SLUG }}
